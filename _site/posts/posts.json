[
  {
    "path": "posts/2021-02-27-test/",
    "title": "test",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Winnie Wing-Yee Tse",
        "url": {}
      }
    ],
    "date": "2021-02-27",
    "categories": [],
    "contents": "\nSetup\nBefore we start, I encourage you to uncomment the codes below and install the required packages that you do not have for this tutorial.\n\n# uncomment below to install packages\n#=using Pkg\nPkg.add([\"RDatasets\", \"Pipe\", \"DataFrames\", \"GLM\",\n        \"Plots\", \"StatPlots\"])\n=#\n  1+1\n2\n\nPrior to running regression analyses, let me briefly go over three essential packages, Pipe, RDatasets, DataFrames, in handling data frames in Julia.\nBrief Introduction to the Package Pipe\nThe package Pipe improves the base pipe operator (|>) in Julia. It allows you to represent the object that is piped from with an underscore _ in the functions that follow. For example, sqrt(sum([1, 2, 3])) involve two commands – one applied to [1, 2, 3] and the other one applied to sum([1, 2, 3]). We can pipe these commands, stemming from the [1, 2, 3] object, using @pipe together with |>, as illustrated below.\n\nusing Pipe\n@pipe [1, 2, 3] |> sum(_) |> sqrt(_)\n2.449489742783178\n\nThe above code might have overkilled this simple task of taking a sqaure root of a sum, but piping will become very useful in handling a long series of commands. For more details of Pipe, please read the julia tutorial on [pipe] (https://syl1.gitbook.io/julia-language-a-concise-tutorial/useful-packages/pipe).\nBrief Introduction to the Package RDatasets\nThe package RDatasets provides most of the base R datasets for Julia users to play around. We will be using the dataset bfi from the R package psych in this tutorial to explore regression analyses in Julia.\nLet’s read in the dataset bfi and drop out missing values.\n\nusing RDatasets\n# show(RDatasets.datasets(\"psych\"), allrows=true)\nbfi = @pipe dataset(\"psych\", \"bfi\") |> dropmissing(_)\n2236×29 DataFrame\n  Row │ Variable  A1     A2     A3     A4     A5     C1     C2     C3     C4   ⋯\n      │ Int64     Int64  Int64  Int64  Int64  Int64  Int64  Int64  Int64  Int6 ⋯\n──────┼─────────────────────────────────────────────────────────────────────────\n    1 │    61623      6      6      5      6      5      6      6  6      1    ⋯\n    2 │    61629      4      3      1      5      1      3      2  4      2\n    3 │    61634      4      4      5      6      5      4      3  5      3\n    4 │    61640      4      5      2      2      1      5      5  5      2\n    5 │    61661      1      5      6      5      6      4      3  2      4    ⋯\n    6 │    61664      2      6      5      6      5      3      5  6      3\n    7 │    61667      4      5      5      6      5      5      5  4      1\n    8 │    61668      1      6      6      1      6      5      2  5      1\n  ⋮   │    ⋮        ⋮      ⋮      ⋮      ⋮      ⋮      ⋮      ⋮      ⋮      ⋮  ⋱\n 2230 │    67540      2      5      3      5      4      5      4  3      4    ⋯\n 2231 │    67541      4      4      5      1      2      3      5  3      6\n 2232 │    67544      5      5      5      6      5      6      6  2      4\n 2233 │    67547      3      4      3      1      3      5      4  5      3\n 2234 │    67556      2      3      5      2      5      5      5  5      1    ⋯\n 2235 │    67559      5      2      2      4      4      5      5  5      2\n 2236 │    67560      2      3      1      4      2      5      5  3      3\n                                                20 columns and 2221 rows omitted\nprintln(names(bfi))\n[\"Variable\", \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"O1\", \"O2\", \"O3\", \"O4\", \"O5\", \"Gender\", \"Education\", \"Age\"]\n\nFor a complete R documentation of this dataset, please refer to [this] (https://www.personality-project.org/r/html/bfi.html).\nBrief Introduction to the Package DataFrames\nFor simplicity, let’s wrangle our data and sum over the scores on the columns for agreeableness (A1 to A5) and for contienciousness (C1 to C5). Gender is a numeric variable in the original dataset, while it should better be treated as a binary variable. Let’s also convert it into a categorical array using categorical.\ntransform() has similar function as mutate() in R, with which we can transform a column and save it into a new column in a dataframe. The operator => is pretty intuitive. In the first transform statment down below, we are basically asking Julia to take the columns between A1 and A5 in bfi, transform them by summing scores on the same row (=> ByRow(+)), and then save these transformed data into a new column called Asum.\nNote that to call a column in a dataframe, we need to place an colon : before the column name.\nusing DataFrames\nbfi = @pipe bfi |> \n            transform(_, Between(:A1, :A5) => ByRow(+) => :Asum) |> \n            transform(_, Between(:C1, :C5) => ByRow(+) => :Csum) |>\n            transform(_, :Gender => categorical => :Gender_bin)\ndescribe(select(bfi, Between(:Asum, :Gender_bin)))\n@pipe bfi |>\n      select(_, Between(:Asum, :Gender_bin)) |>\n      describe(_)\ndescribe() provides summary statistics of the selected columns of our newly created variables from Asum to Gender_bin. As can be seen in the summary table, Gender_bin has a data type of CategoricalValue{Int64,UInt32}. Through that way in our following regression analysis, gender will be treated as a categorical variable and automatically dummy coded.\nFor data wrangling in Julia using the package Dataframes, a [cheatsheet] (https://ahsmart.com/assets/pages/data-wrangling-with-data-frames-jl-cheat-sheet/DataFramesCheatSheet_v0.22_rev1.pdf) may come in handy here. I am a beginner Julia and Dataframes user. If you have a better way to optimize my codes, please let me know and I will be more than happy to learn it!\nLinear Regression\nBelow are some summary statistics and a snapshot of the variables of interest for the following analyses.\ndescribe(select(bfi, Between(:Education, :Gender_bin)))\nfirst(select(bfi, Between(:Education, :Gender_bin)), 5)\nIn our sample, do older people tend to be more agreeable than younger people? We can fit a linear model with Age as the predictor and Asum, the sum scores of agreeableness, as the outcome variable, and determine whether there is a positive association between these two variables.\nThe package GLM provides convenient ways that are analogous to the R functions lm() and glm() to specify linear models in Julia.\nTo build a linear model, we use lm(), specify the model equation within @formula(), and indicate the dataset after the formula.\nusing GLM\nlm1 = lm(@formula(Asum ~ Age), bfi)\nUnlike R, we do not need to additionally summarize lm1 to get a summary table of the outputs.\nEquivalent to lm(), we can use the fit() function with the LinearModel argument.\nfit1 = fit(LinearModel, @formula(Asum ~ Age), bfi)\nlm(...) and fit(LinearModel, ...) do not differ in their type, output, and functionality. A quick check on their type:\ntypeof(lm1)\ntypeof(fit1)\nwhich are essentially the same.\nExtracting Model Information\nWe can use coef(), stderror(), and vcov() to extract coefficient estimates and standard errors of the coefficents, and the estimated variance-covariance matrix of the coefficient estimates, respectively.\ncoef(lm1)\nstderror(lm1)\nvcov(lm1)\nTo obtain statistics for model fit, we can use r2 for R^2 and deviance() for the weighted residual sum of squares.\nr2(lm1)\ndeviance(lm1)\npredict() computes the predicted values of each individual in our sample.\npredict(lm1)\n!!! note “Follow-up Practice (1)” Let’s try to run a linear model to investigate whether contiouenciousness is predicted by education. How much variance is explained by this model?\nlm3 = fit(LinearModel, @formula(Csum ~ Education), bfi)\nr2(lm3)\nMultiple Regression\nWe may suspect that the difference in agreeableness over years of age depend on someone’s education level. To investigate this, we can add an interation between Age and Education on Asum by Age & Education. Typically when we add an interaction term to a model, we include also the main effects of the variables. A shorthand of specifying both the main effects and interaction between the variables is Age * Education.\n# the models below are equivalent\nlm2a = lm(@formula(Asum ~ Age + Education + Age & Education), bfi)\nlm2b = lm(@formula(Asum ~ Age * Education), bfi)\n!!! note “Follow-up Practice (2)” Let’s fit a model to explore whether there is an interaction between education and gender (Gender_bin) on contienciousness. How much did the variance explained by the model increasecompared to the model without the interaction (in reference to Practice (1)) increase?\nProbit Regression\nFor the illustrative purpose, I arbitrarily define that a sum score above 20 out of 30 is a high score of agreeableness and dichotomize Asum to 1 or 0 accordingly.\nbfi = @pipe transform(bfi, \n                      :Asum => ByRow(function(x) \n                                        if x >= 20 1 \n                                        else 0 \n                                        end \n                                     end) \n                               => :Abin);\ndescribe(select(bfi, :Abin))\nNow because our outcome variable is a binary variable, it is more appropriate to model it with a binomial distribution and a probit link.\nlm_probit = glm(@formula(Abin ~ Age), bfi, Binomial(), ProbitLink())\nAn equivalent way to specify this probit model is\nfit(GeneralizedLinearModel, @formula(Abin ~ Age), bfi, Binomial(), ProbitLink())\nOur probit model is as follows.\n\\Phi^{-1}(\\text{High_Agreeableness}) = 0.319 + 0.008 \\text{Age}\nFor a person of age 20, the predicted probit of scoring high on agreeableness is 0.479.\nNote that the coefficients are probability z-scores and the prediction is a probit. To translate a probit back to a probability, we could use cdf() in the Distributions package.\nNormal() by default specifies a normal distribution with a mean of 0 and a standard deviation of 1.\nusing Distributions\ncdf(Normal(), .479)\nThe predicted probability of someone at age 20 scoring high on agreeablness is 68.4%.\nLogistic Regression\nAn alternative way to handle binary outcome variables is through logistic regression.\nlm_logit = glm(@formula(Abin ~ Age), bfi, Binomial(), LogitLink())\nSimilarly, an equivalent way to specify this logistic model is\nfit(GeneralizedLinearModel, @formula(Abin ~ Age), bfi, Binomial(), LogitLink())\nNow our logistic model is as follows.\nlogit(\\text{High_Agreeableness}) = 0.498 + 0.014 \\text{Age}\nFor a person of age 20, the predicted logit of scoring high on agreeableness is 0.778. Now the prediction is represented in terms of logit. To make it more interpretable, we can simply exponentiate the logit to get the odds ratio, or use the following formula to get the probability:\n\\hat{\\pi} = \\frac{exp(0.498 + 0.014)}{1 + exp(0.498 + 0.014)}\nwhere \\hat{\\pi} is the predicted probability of someone scoring high on agreeableness.\nexp(.778)/(1 + exp(.778))\nConsistent with the result from probit regression, the predicted probability of someone at age 20 scoring high on agreeablness is 68.5%.\nVisualization\nLet’s cover the answers of Follow-up Practice (1) and (2) here.\n# Practice (1)\nlm3 = fit(LinearModel, @formula(Csum ~ Education), bfi)\n# Practice (2)\nlm4 = fit(LinearModel, @formula(Csum ~ Education*Gender_bin), bfi)\nNote that Gender_bin is dummy coded with male (1) as 0 and female (2) as 1. The default in GLM is dummy coding, but we can specify a different contrast coding. More details on contrast coding can be found [here] (https://juliastats.org/StatsModels.jl/stable/contrasts/).\n# extracting coefficients\nlm3_b0, lm3_b1 = coef(lm3);\nlm4_b0, lm4_b1, lm4_b2, lm4_b3 = coef(lm4);\nWe will use the package Plots for visualizing the relationship between variables in the fitted models. The package StatsPlots is an extension of Plots that supports plotting with DataFrame objects.\nusing Plots, StatsPlots\n@df bfi scatter(\n    :Education, \n    :Csum, \n    group = :Gender, \n    legend = :bottomright, \n    label = [\"Male\" \"Female\"], \n    xlabel = \"Education\", \n    ylabel = \"Contientiousness\") \nplot!((x) -> lm3_b0 + lm3_b1 * x, 1, 5, label = \"Linear Model\")\n@df bfi scatter(\n    :Education, \n    :Csum, \n    group = :Gender, \n    legend = :bottomright, \n    label = [\"Male\" \"Female\"], \n    xlabel = \"Education\", \n    ylabel = \"Contienciousness\", \n    size = (690,460)) \nplot!((x) -> lm4_b0 + lm4_b1 * x + lm4_b2 * 0 + lm4_b2 * x * 0, \n      1, 5, label = \"Male\", linecolor = \"blue\")\nplot!((x) -> lm4_b0 + lm4_b1 * x + lm4_b2 * 1 + lm4_b2 * x * 1, \n      1, 5, label = \"Female\", linecolor = \"red\")   \nI also made reference to this webpage to create the plots above.\nPerhaps because the “research questions” I posed here were not so interesting, there was not much interesting to observe from the analysis outputs and the plots. But I hope you enjoy this tutorial in doing regression analyses with Julia :)\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-27T19:03:56-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-09-julia-regression/",
    "title": "Regression with Julia!",
    "description": {},
    "author": [
      {
        "name": "Winnie Wing-Yee Tse",
        "url": {}
      }
    ],
    "date": "2021-02-11",
    "categories": [
      "Julia",
      "Regression",
      "Visualization"
    ],
    "contents": "\n\nContents\nSetup\nBrief Introduction to the Package Pipe\nBrief Introduction to the Package RDatasets\nBrief Introduction to the Package DataFrames\n\nLinear Regression\nExtracting Model Information\n\nMultiple Regression\nProbit Regression\nLogistic Regression\nVisualization\n\nSetup\nBefore we start, I encourage you to uncomment the codes below and install the required packages that you do not have for this tutorial.\nusing Plots, StatsPlots\n#= uncomment below to install packages\nusing Pkg\nPkg.add([\"RDatasets\", \"Pipe\", \"DataFrames\", \"GLM\",\n        \"Plots\", \"StatPlots\"])\n=#\nPrior to running regression analyses, let me briefly go over three essential packages, Pipe, RDatasets, DataFrames, in handling data frames in Julia.\nBrief Introduction to the Package Pipe\nThe package Pipe improves the base pipe operator (|>) in Julia. It allows you to represent the object that is piped from with an underscore _ in the functions that follow. For example, sqrt(sum([1, 2, 3])) involve two commands – one applied to [1, 2, 3] and the other one applied to sum([1, 2, 3]). We can pipe these commands, stemming from the [1, 2, 3] object, using @pipe together with |>, as illustrated below.\nusing Pipe\n@pipe [1, 2, 3] |> sum(_) |> sqrt(_)\n2.449489742783178\nThe above code might have overkilled this simple task of taking a sqaure root of a sum, but piping will become very useful in handling a long series of commands. For more details of Pipe, please read the julia tutorial on [pipe] (https://syl1.gitbook.io/julia-language-a-concise-tutorial/useful-packages/pipe).\nBrief Introduction to the Package RDatasets\nThe package RDatasets provides most of the base R datasets for Julia users to play around. We will be using the dataset bfi from the R package psych in this tutorial to explore regression analyses in Julia.\nLet’s read in the dataset bfi and drop out missing values.\nusing RDatasets\n# show(RDatasets.datasets(\"psych\"), allrows=true)\nbfi = @pipe dataset(\"psych\", \"bfi\") |> dropmissing(_)\nprintln(names(bfi))\n[\"Variable\", \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"E\n1\", \"E2\", \"E3\", \"E4\", \"E5\", \"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"O1\", \"O2\", \"O3\",\n \"O4\", \"O5\", \"Gender\", \"Education\", \"Age\"]\nFor a complete R documentation of this dataset, please refer to [this] (https://www.personality-project.org/r/html/bfi.html).\nBrief Introduction to the Package DataFrames\nFor simplicity, let’s wrangle our data and sum over the scores on the columns for agreeableness (A1 to A5) and for contienciousness (C1 to C5). Gender is a numeric variable in the original dataset, while it should better be treated as a binary variable. Let’s also convert it into a categorical array using categorical.\ntransform() has similar function as mutate() in R, with which we can transform a column and save it into a new column in a dataframe. The operator => is pretty intuitive. In the first transform statment down below, we are basically asking Julia to take the columns between A1 and A5 in bfi, transform them by summing scores on the same row (=> ByRow(+)), and then save these transformed data into a new column called Asum.\nNote that to call a column in a dataframe, we need to place an colon : before the column name.\nusing DataFrames\nbfi = @pipe bfi |> \n            transform(_, Between(:A1, :A5) => ByRow(+) => :Asum) |> \n            transform(_, Between(:C1, :C5) => ByRow(+) => :Csum) |>\n            transform(_, :Gender => categorical => :Gender_bin)\ndescribe(select(bfi, Between(:Asum, :Gender_bin)))\n3×7 DataFrame\n Row │ variable    mean     min  median  max  nmissing  eltype             \n    ⋯\n     │ Symbol      Union…   Any  Union…  Any  Int64     DataType           \n    ⋯\n─────┼─────────────────────────────────────────────────────────────────────\n─────\n   1 │ Asum        21.1632  5    22.0    30          0  Int64              \n    ⋯\n   2 │ Csum        19.0501  5    19.0    30          0  Int64\n   3 │ Gender_bin           1            2           0  CategoricalValue{In\nt64\n                                                                1 column om\nitted\ndescribe() provides summary statistics of the selected columns of our newly created variables from Asum to Gender_bin. As can be seen in the summary table, Gender_bin has a data type of CategoricalValue{Int64,UInt32}. Through that way in our following regression analysis, gender will be treated as a categorical variable and automatically dummy coded.\nFor data wrangling in Julia using the package Dataframes, a [cheatsheet] (https://ahsmart.com/assets/pages/data-wrangling-with-data-frames-jl-cheat-sheet/DataFramesCheatSheet_v0.22_rev1.pdf) may come in handy here. I am a beginner Julia and Dataframes user. If you have a better way to optimize my codes, please let me know and I will be more than happy to learn it!\nLinear Regression\nBelow are some summary statistics and a snapshot of the variables of interest for the following analyses.\ndescribe(select(bfi, Between(:Education, :Gender_bin)))\n5×7 DataFrame\n Row │ variable    mean     min  median  max  nmissing  eltype             \n    ⋯\n     │ Symbol      Union…   Any  Union…  Any  Int64     DataType           \n    ⋯\n─────┼─────────────────────────────────────────────────────────────────────\n─────\n   1 │ Education   3.19141  1    3.0     5           0  Int64              \n    ⋯\n   2 │ Age         29.5103  3    26.0    86          0  Int64\n   3 │ Asum        21.1632  5    22.0    30          0  Int64\n   4 │ Csum        19.0501  5    19.0    30          0  Int64\n   5 │ Gender_bin           1            2           0  CategoricalValue{In\nt64 ⋯\n                                                                1 column om\nitted\nfirst(select(bfi, Between(:Education, :Gender_bin)), 5)\n5×5 DataFrame\n Row │ Education  Age    Asum   Csum   Gender_bin\n     │ Int64      Int64  Int64  Int64  Cat…\n─────┼────────────────────────────────────────────\n   1 │         3     21     28     22  2\n   2 │         2     19     14     15  1\n   3 │         1     21     24     17  1\n   4 │         1     17     14     19  1\n   5 │         5     68     23     18  1\nIn our sample, do older people tend to be more agreeable than younger people? We can fit a linear model with Age as the predictor and Asum, the sum scores of agreeableness, as the outcome variable, and determine whether there is a positive association between these two variables.\nThe package GLM provides convenient ways that are analogous to the R functions lm() and glm() to specify linear models in Julia.\nTo build a linear model, we use lm(), specify the model equation within @formula(), and indicate the dataset after the formula.\nusing GLM\nlm1 = lm(@formula(Asum ~ Age), bfi)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\n\nAsum ~ 1 + Age\n\nCoefficients:\n───────────────────────────────────────────────────────────────────────────\n                  Coef.  Std. Error      t  Pr(>|t|)  Lower 95%   Upper 95%\n───────────────────────────────────────────────────────────────────────────\n(Intercept)  20.4382     0.225823    90.51    <1e-99  19.9954    20.8811\nAge           0.0245685  0.00719702   3.41    0.0007   0.010455   0.0386821\n───────────────────────────────────────────────────────────────────────────\nUnlike R, we do not need to additionally summarize lm1 to get a summary table of the outputs.\nEquivalent to lm(), we can use the fit() function with the LinearModel argument.\nfit1 = fit(LinearModel, @formula(Asum ~ Age), bfi)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\n\nAsum ~ 1 + Age\n\nCoefficients:\n───────────────────────────────────────────────────────────────────────────\n                  Coef.  Std. Error      t  Pr(>|t|)  Lower 95%   Upper 95%\n───────────────────────────────────────────────────────────────────────────\n(Intercept)  20.4382     0.225823    90.51    <1e-99  19.9954    20.8811\nAge           0.0245685  0.00719702   3.41    0.0007   0.010455   0.0386821\n───────────────────────────────────────────────────────────────────────────\nlm(...) and fit(LinearModel, ...) do not differ in their type, output, and functionality. A quick check on their type:\ntypeof(lm1)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\ntypeof(fit1)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\nwhich are essentially the same.\nExtracting Model Information\nWe can use coef(), stderror(), and vcov() to extract coefficient estimates and standard errors of the coefficents, and the estimated variance-covariance matrix of the coefficient estimates, respectively.\ncoef(lm1)\n2-element Array{Float64,1}:\n 20.43821402633636\n  0.024568514618654096\nstderror(lm1)\n2-element Array{Float64,1}:\n 0.22582269777999403\n 0.007197020298763872\nvcov(lm1)\n2×2 Array{Float64,2}:\n  0.0509959   -0.00152855\n -0.00152855   5.17971e-5\nTo obtain statistics for model fit, we can use r2 for R^2 and deviance() for the weighted residual sum of squares.\nr2(lm1)\n0.005189310057134855\ndeviance(lm1)\n29411.99403563621\npredict() computes the predicted values of each individual in our sample.\npredict(lm1)\n2236-element Array{Float64,1}:\n 20.9541528333281\n 20.905015804090787\n 20.9541528333281\n 20.85587877485348\n 22.10887302040484\n 21.10156392104002\n 20.880447289472134\n 20.92958431870944\n 21.69120827188772\n 21.248975008751945\n  ⋮\n 21.15070095027733\n 21.248975008751945\n 21.003289862565406\n 20.978721347946752\n 20.978721347946752\n 21.02785837718406\n 21.15070095027733\n 21.199837979514637\n 21.666639757269067\n!!! note “Follow-up Practice (1)” Let’s try to run a linear model to investigate whether contiouenciousness is predicted by education. How much variance is explained by this model?\nMultiple Regression\nWe may suspect that the difference in agreeableness over years of age depend on someone’s education level. To investigate this, we can add an interation between Age and Education on Asum by Age & Education. Typically when we add an interaction term to a model, we include also the main effects of the variables. A shorthand of specifying both the main effects and interaction between the variables is Age * Education.\n# the models below are equivalent\nlm(@formula(Asum ~ Age + Education + Age & Education), bfi)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\n\nAsum ~ 1 + Age + Education + Age & Education\n\nCoefficients:\n───────────────────────────────────────────────────────────────────────────\n──────\n                      Coef.  Std. Error      t  Pr(>|t|)   Lower 95%    Upp\ner 95%\n───────────────────────────────────────────────────────────────────────────\n──────\n(Intercept)      19.4241      0.651563   29.81    <1e-99  18.1463     20.70\n18\nAge               0.0831532   0.0211002   3.94    <1e-4    0.0417752   0.12\n4531\nEducation         0.273547    0.200684    1.36    0.1730  -0.119999    0.66\n7093\nAge & Education  -0.016346    0.0061294  -2.67    0.0077  -0.0283659  -0.00\n432607\n───────────────────────────────────────────────────────────────────────────\n──────\nlm(@formula(Asum ~ Age * Education), bfi)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\n\nAsum ~ 1 + Age + Education + Age & Education\n\nCoefficients:\n───────────────────────────────────────────────────────────────────────────\n──────\n                      Coef.  Std. Error      t  Pr(>|t|)   Lower 95%    Upp\ner 95%\n───────────────────────────────────────────────────────────────────────────\n──────\n(Intercept)      19.4241      0.651563   29.81    <1e-99  18.1463     20.70\n18\nAge               0.0831532   0.0211002   3.94    <1e-4    0.0417752   0.12\n4531\nEducation         0.273547    0.200684    1.36    0.1730  -0.119999    0.66\n7093\nAge & Education  -0.016346    0.0061294  -2.67    0.0077  -0.0283659  -0.00\n432607\n───────────────────────────────────────────────────────────────────────────\n──────\n!!! note “Follow-up Practice (2)” Let’s fit a model to explore whether there is an interaction between education and gender (Gender_bin) on contienciousness. How much did the variance explained by the model increasecompared to the model without the interaction (in reference to Practice (1)) increase?\nProbit Regression\nFor the illustrative purpose, I arbitrarily define that a sum score above 20 out of 25 is a high score of agreeableness and dichotomize Asum to 1 or 0 accordingly.\nbfi = @pipe transform(bfi, \n                      :Asum => ByRow(function(x) \n                                        if x >= 20 1 \n                                        else 0 \n                                        end \n                                     end) \n                               => :Abin);\ndescribe(select(bfi, :Abin))\n1×7 DataFrame\n Row │ variable  mean     min    median   max    nmissing  eltype\n     │ Symbol    Float64  Int64  Float64  Int64  Int64     DataType\n─────┼──────────────────────────────────────────────────────────────\n   1 │ Abin      0.70975      0      1.0      1         0  Int64\nNow because our outcome variable is a binary variable, it is more appropriate to model it with a binomial distribution and a probit link.\nlm_probit = glm(@formula(Abin ~ Age), bfi, Binomial(), ProbitLink())\nStatsModels.TableRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Arr\nay{Float64,1},Distributions.Binomial{Float64},GLM.ProbitLink},GLM.DensePred\nChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2}}}},Array{Float\n64,2}}\n\nAbin ~ 1 + Age\n\nCoefficients:\n──────────────────────────────────────────────────────────────────────────\n                  Coef.  Std. Error     z  Pr(>|z|)   Lower 95%  Upper 95%\n──────────────────────────────────────────────────────────────────────────\n(Intercept)  0.319024    0.0832706   3.83    0.0001  0.155816    0.482231\nAge          0.00798517  0.00269249  2.97    0.0030  0.00270799  0.0132623\n──────────────────────────────────────────────────────────────────────────\nAn equivalent way to specify this probit model is\nfit(GeneralizedLinearModel, @formula(Abin ~ Age), bfi, Binomial(), ProbitLink())\nStatsModels.TableRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Arr\nay{Float64,1},Distributions.Binomial{Float64},GLM.ProbitLink},GLM.DensePred\nChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2}}}},Array{Float\n64,2}}\n\nAbin ~ 1 + Age\n\nCoefficients:\n──────────────────────────────────────────────────────────────────────────\n                  Coef.  Std. Error     z  Pr(>|z|)   Lower 95%  Upper 95%\n──────────────────────────────────────────────────────────────────────────\n(Intercept)  0.319024    0.0832706   3.83    0.0001  0.155816    0.482231\nAge          0.00798517  0.00269249  2.97    0.0030  0.00270799  0.0132623\n──────────────────────────────────────────────────────────────────────────\nOur probit model is as follows. \\[\n\\Phi^{-1}(\\text{High_Agreeableness}) = 0.319 + 0.008 \\text{Age}\n\\]\nFor a person of age 20, the predicted probit of scoring high on agreeableness is 0.479.\nNote that the coefficients are probability z-scores and the prediction is a probit. To translate a probit back to a probability, we could use cdf() in the Distributions package.\nNormal() by default specifies a normal distribution with a mean of 0 and a standard deviation of 1.\nusing Distributions\ncdf(Normal(), .479)\n0.6840306856730872\nThe predicted probability of someone at age 20 scoring high on agreeablness is 68.4%.\nLogistic Regression\nAn alternative way to handle binary outcome variables is through logistic regression.\nlm_logit = glm(@formula(Abin ~ Age), bfi, Binomial(), LogitLink())\nStatsModels.TableRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Arr\nay{Float64,1},Distributions.Binomial{Float64},GLM.LogitLink},GLM.DensePredC\nhol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2}}}},Array{Float6\n4,2}}\n\nAbin ~ 1 + Age\n\nCoefficients:\n─────────────────────────────────────────────────────────────────────────\n                 Coef.  Std. Error     z  Pr(>|z|)   Lower 95%  Upper 95%\n─────────────────────────────────────────────────────────────────────────\n(Intercept)  0.497558   0.139339    3.57    0.0004  0.224458    0.770657\nAge          0.0135925  0.00455195  2.99    0.0028  0.00467084  0.0225141\n─────────────────────────────────────────────────────────────────────────\nSimilarly, an equivalent way to specify this logistic model is\nfit(GeneralizedLinearModel, @formula(Abin ~ Age), bfi, Binomial(), LogitLink())\nStatsModels.TableRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Arr\nay{Float64,1},Distributions.Binomial{Float64},GLM.LogitLink},GLM.DensePredC\nhol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2}}}},Array{Float6\n4,2}}\n\nAbin ~ 1 + Age\n\nCoefficients:\n─────────────────────────────────────────────────────────────────────────\n                 Coef.  Std. Error     z  Pr(>|z|)   Lower 95%  Upper 95%\n─────────────────────────────────────────────────────────────────────────\n(Intercept)  0.497558   0.139339    3.57    0.0004  0.224458    0.770657\nAge          0.0135925  0.00455195  2.99    0.0028  0.00467084  0.0225141\n─────────────────────────────────────────────────────────────────────────\nNow our logistic model is as follows. \\[\nlogit(\\text{High_Agreeableness}) = 0.498 + 0.014 \\text{Age}\n\\]\nFor a person of age 20, the predicted logit of scoring high on agreeableness is 0.778. Now the prediction is represented in terms of logit. To make it more interpretable, we can simply exponentiate the logit to get the odds ratio, or use the following formula to get the probability:\n\\[\n\\hat{\\pi} = \\frac{exp(0.498 + 0.014)}{1 + exp(0.498 + 0.014)}\n\\]\nwhere \\hat{\\pi} is the predicted probability of someone scoring high on agreeableness.\nexp(.778)/(1 + exp(.778))\n0.6852489081587367\nConsistent with the result from probit regression, the predicted probability of someone at age 20 scoring high on agreeablness is 68.5%.\nVisualization\nLet’s cover the answers of Follow-up Practice (1) and (2) here.\n# Practice (1)\nlm3 = fit(LinearModel, @formula(Csum ~ Education), bfi)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\n\nCsum ~ 1 + Education\n\nCoefficients:\n──────────────────────────────────────────────────────────────────────────\n                Coef.  Std. Error       t  Pr(>|t|)   Lower 95%  Upper 95%\n──────────────────────────────────────────────────────────────────────────\n(Intercept)  18.5942    0.176512   105.34    <1e-99  18.2481     18.9403\nEducation     0.14285   0.0522318    2.73    0.0063   0.0404219   0.245278\n──────────────────────────────────────────────────────────────────────────\n# Practice (2)\nlm4 = fit(LinearModel, @formula(Csum ~ Education*Gender_bin), bfi)\nStatsModels.TableRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1\n}},GLM.DensePredChol{Float64,LinearAlgebra.Cholesky{Float64,Array{Float64,2\n}}}},Array{Float64,2}}\n\nCsum ~ 1 + Education + Gender_bin + Education & Gender_bin\n\nCoefficients:\n───────────────────────────────────────────────────────────────────────────\n──────────────\n                                Coef.  Std. Error      t  Pr(>|t|)   Lower \n95%  Upper 95%\n───────────────────────────────────────────────────────────────────────────\n──────────────\n(Intercept)                18.9793      0.287144   66.10    <1e-99  18.4162\n     19.5424\nEducation                   0.0693464   0.0844421   0.82    0.4116  -0.0962\n469   0.23494\nGender_bin: 2              -0.607298    0.364028   -1.67    0.0954  -1.3211\n7     0.106571\nEducation & Gender_bin: 2   0.119855    0.10743     1.12    0.2647  -0.0908\n195   0.330529\n───────────────────────────────────────────────────────────────────────────\n──────────────\nNote that Gender_bin is dummy coded with male (1) as 0 and female (2) as 1. The default in GLM is dummy coding, but we can specify a different contrast coding. More details on contrast coding can be found [here] (https://juliastats.org/StatsModels.jl/stable/contrasts/).\n# extracting coefficients\nlm3_b0, lm3_b1 = coef(lm3);\nlm4_b0, lm4_b1, lm4_b2, lm4_b3 = coef(lm4);\nWe will use the package Plots for visualizing the relationship between variables in the fitted models. The package StatsPlots is an extension of Plots that supports plotting with DataFrame objects.\n@df bfi scatter(\n    :Education, \n    :Csum, \n    group = :Gender, \n    legend = :bottomright, \n    label = [\"Male\" \"Female\"], \n    xlabel = \"Education\", \n    ylabel = \"Contientiousness\") \nplot!((x) -> lm3_b0 + lm3_b1 * x, 1, 5, label = \"Linear Model\")\n\n@df bfi scatter(\n    :Education, \n    :Csum, \n    group = :Gender, \n    legend = :bottomright, \n    label = [\"Male\" \"Female\"], \n    xlabel = \"Education\", \n    ylabel = \"Contienciousness\", \n    size=(690,460)) \nplot!((x) -> lm4_b0 + lm4_b1 * x + lm4_b2 * 0 + lm4_b2 * x * 0, \n      1, 5, label = \"Male\", linecolor = \"blue\")\nplot!((x) -> lm4_b0 + lm4_b1 * x + lm4_b2 * 1 + lm4_b2 * x * 1, \n      1, 5, label = \"Female\", linecolor = \"red\")\n\nI also made reference to this webpage to create the plots above.\nPerhaps because the “research questions” I posed here were not so interesting, there was not much interesting to observe from the analysis outputs and the plots. But I hope you enjoy this tutorial in doing regression analyses with Julia :)\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-27T14:33:08-08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Measurement & Multilevel Modeling Lab",
    "description": "Welcome to our blog. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "MMM Lab",
        "url": {}
      }
    ],
    "date": "2020-12-17",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-27T14:33:08-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-07-25-part-1-covid-19/",
    "title": "Exploring the UAS Survey Part 1: Data exploration (Demography and Risk Items)",
    "description": "Analyze Covid-19 survey conducted by USC in March, 2020.",
    "author": [
      {
        "name": "Haley",
        "url": {}
      }
    ],
    "date": "2020-07-25",
    "categories": [
      "COVID",
      "Visualization",
      "Exploratory Data Analysis",
      "Applied"
    ],
    "contents": "\n\nContents\nIntroduction\nData preparation\nLoading libraries\nLoading data using here package\nData transformation\n\nGender\nAge\nResidence\nEducation\nIncome\nRace\nTime\nSummary\nPublication Statement\n\n[Edit by ML: The styler package was used to style the code. ]\nIntroduction\nAs people in the US learned about the COVID-19 pandemic, their perceived risks related to infection, unemployment, and other risk factors have changed during the early month of the outbreak. In this post, we are interpreting a survey published by the University of Southern California by analyzing and comparing some key features related to risk factors.\nData preparation\nLoading libraries\n\n\nlibrary(tidyverse)\nlibrary(Rmisc)\nlibrary(ggpubr)\nlibrary(ggsci)\n\n\n\nLoading data using here package\n\n\n# Imported the second wave of UAS230 Covid Survey Data.\ncovid19 <- readr::read_csv(here::here(\"data\", \"uas230_march_31_2020.csv\"))\n# The data was collected from a national survey during 10 March,2020 - 31 March,2020.\n\n\n\nData transformation\n\n\n# Create a new dataframe contains only key demographic information and risk items\ndemo <- covid19 %>%\n  select(\n    statereside, gender, end_date, age, education, hhincome, race,\n    cr005, cr009, cr006, cr008a, end_date\n  )\n\ndemo <- na_if(demo, \".a\") # question never seen by the respondents. \n                          # S/he may skip over the question, or never \n                          # view the question due to survey broke off.\ndemo <- na_if(demo, \".e\") # .e -> questions that were asked but not answered\ndemo <- na_if(demo, \".c\") # .c -> if respondent did not complete the survey\n\ndemo <- mutate_at(\n  demo, # convert data type to numeric data\n  vars(cr006, cr005, cr009, cr008a, age),\n  as.numeric\n)\ndemo <- na.omit(demo)\n\n\n\nGender\n58.6% of the respondents are female.\nMale and Female have a similar belief in how infectious Coronavirus is.\nMore male respondents are very optimistic about the risks related to Coronavirus.\n\n\ngen <- demo %>%\n  group_by(gender) %>%\n  dplyr::summarise(g = n())\n\nggplot(gen, aes(x = gender, y = g, fill = gender)) + # Barplot of gender distribution with annotation\n  geom_col() +\n  geom_label(aes(label = g)) +\n  labs(x = \"Gender\", y = \"Count\") +\n  scale_fill_jco() + # jco palette\n  coord_flip() +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\ngender_inf <- demo %>% # Plot perceived infection risk\n  select(gender, cr005) %>%\n  ggplot(aes(x = cr005, color = gender, fill = gender)) +\n  geom_density(alpha = 0.5) +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  labs(x = \"Perceived risk of infection\")\n\n\ngender_death <- demo %>% # Plot perceived risk of death\n  select(gender, cr006) %>%\n  ggplot(aes(x = cr006, color = gender, fill = gender)) +\n  geom_density(alpha = 0.5) +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  labs(x = \"Perceived risk of death\", y = \"\")\n\n\ngender_unemploy <- demo %>% # Plot perceived unemployment risk\n  select(gender, cr008a) %>%\n  ggplot(aes(x = cr008a, color = gender, fill = gender)) +\n  geom_density(alpha = 0.5) +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  labs(x = \"Perceived unemployment risk\", y = \"\")\n\n\ngender_finance <- demo %>% # Plott perceived risk of running out of money\n  select(gender, cr009) %>%\n  ggplot(aes(x = cr009, color = gender, fill = gender)) +\n  geom_density(alpha = 0.5) +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  labs(x = \"Perceived risk of running out of money\")\n\n\nggarrange(gender_inf, gender_death, gender_finance, gender_unemploy + rremove(\"x.text\"), # Combining gender and risk items in one plot\n  common.legend = TRUE, legend = \"right\",\n  ncol = 2, nrow = 2\n)\n\n\n\n\nAge\nMost respondents are between age 30 to age 60.\nYounger respondents have a higher estimate chance of infection, but a lower estimate chance of death related to Coronavirus.\nElderly respondents have a lower perceived unemployment risk and financial risk related to coronavirus.\n[Two graphs below are edited by ML]\n\n\nggplot(demo, aes(x = age)) +\n  geom_histogram(binwidth = 10, alpha = 0.85, fill = \"deepskyblue3\", color = \"white\") +\n  theme_minimal() +\n  labs(x = \"Age\", y = \"Count\") +\n  scale_x_continuous(breaks = seq(0, 100, by = 10)) +\n  scale_y_continuous(breaks = seq(0, 1400, by = 200))\n\n\n\nggplot(data = demo) + # combined plot 1\n  geom_point(\n    mapping = aes(x = age, y = cr005, color = \"Perceived Risk of Infection\"),\n    alpha = 0.1, size = 0.5\n  ) +\n  geom_point(\n    mapping = aes(x = age, y = cr006, color = \"Perceived Risk of Death\"),\n    alpha = 0.1, size = 0.5\n  ) +\n  geom_smooth(mapping = aes(x = age, y = cr005, color = \"Perceived Risk of Infection\")) +\n  geom_smooth(mapping = aes(x = age, y = cr006, color = \"Perceived Risk of Death\")) +\n  labs(y = \"Perceived Risk (%)\", x = \"Age\") +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  scale_x_continuous(breaks = seq(0, 100, by = 10))\n\n\n\nggplot(data = demo) + # combined plot 2\n  geom_point(\n    mapping = aes(x = age, y = cr008a, color = \"Perceived Unemployment Risk\"),\n    alpha = 0.1, size = 0.5\n  ) +\n  geom_point(\n    mapping = aes(x = age, y = cr009, color = \"Perceived Financial Risk\"),\n    alpha = 0.1, size = 0.5\n  ) +\n  geom_smooth(mapping = aes(x = age, y = cr008a, color = \"Perceived Unemployment Risk\")) +\n  geom_smooth(mapping = aes(x = age, y = cr009, color = \"Perceived Financial Risk\")) +\n  labs(y = \"Perceived Risk (%)\", x = \"Age\") +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  scale_x_continuous(breaks = seq(15, 95, by = 10))\n\n\n\n\nResidence\nThe number of respondents from California is significantly higher than number of respondents from any other states.\nRespondents in New York, Pennsylvania, and Michigan report a lower perceived fianancial risk related to Coronavirus.\nWhile respondents in California, Illnois, and Texas report a higher perceived unemployment risk and financial risk related to Coronavirus.\n[ML: Interestingly, it looks like Californian perceived higher risks consistently than those in other states.]\n\n\ndemo_state <- demo %>% # add counts for each state:\n  add_count(statereside, name = \"n\") %>% # use New York as cutline, filter out 8 states with n >= 115\n  filter(n >= 115)\n\n\nreside <- demo_state %>%\n  group_by(statereside) %>%\n  dplyr::summarise(re = n())\n\nggplot(reside, aes(x = statereside, y = re, fill = statereside)) + # Barplot of gender distribution with annotation\n  geom_col() +\n  geom_label(aes(label = re), fill = \"white\") +\n  labs(x = \"State Reside\", y = \"Count\") +\n  scale_fill_jco() +\n  coord_flip() +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\ndeath_state <- ggplot(demo_state, aes(x = cr006, fill = statereside)) + # Plot perceived risk of death\n  geom_density(alpha = 0.3) +\n  theme_minimal() +\n  labs(y = \"\", x = \"Perceived risk of death\") +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10))\n\ninf_state <- ggplot(demo_state, aes(x = cr005, fill = statereside)) + # Plot perceived risk of infection\n  geom_density(alpha = 0.3) +\n  theme_minimal() +\n  labs(x = \"Perceived risk of infection\") +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10))\n\nfinance_state <- ggplot(demo_state, aes(x = cr009, fill = statereside)) + # Plot perceived financial risk\n  geom_density(alpha = 0.3) +\n  theme_minimal() +\n  labs(y = \"\", x = \"Perceived financial risk\") +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10))\n\n\nunemploy_state <- ggplot(demo_state, aes(x = cr008a, fill = statereside)) + # Plot perceived unemployment risk\n  geom_density(alpha = 0.3) +\n  theme_minimal() +\n  labs(x = \"Perceived unemployment risk\") +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10))\n\n\nggarrange(inf_state, death_state, finance_state, unemploy_state, # combine the plots\n  common.legend = TRUE, legend = \"right\",\n  ncol = 2, nrow = 2\n)\n\n\n\nfinance_state_stat <- desc_statby(demo_state, measure.var = \"cr009\", grps = \"statereside\") # Summary table for perceived risk of financial hardship by states\nfinance_state_stat <- finance_state_stat[, c(\"statereside\", \"length\", \"mean\", \"sd\")] %>%\n  arrange(-mean) # sort by mean in decending order\n\nfinance_state_stat$mean <- round(finance_state_stat$mean, 2) # round to 2 decimal places\nfinance_state_stat$sd <- round(finance_state_stat$sd, 2)\n\n\nfinance_state_stat <- ggtexttable(finance_state_stat,\n  rows = NULL,\n  theme = ttheme(\"mOrange\")\n) # Summary table plot, medium orange theme\n\n\nunemploy_state_stat <- desc_statby(demo_state, measure.var = \"cr008a\", grps = \"statereside\") # Summary table for perceived risk of unemployment by states\nunemploy_state_stat <- unemploy_state_stat[, c(\"statereside\", \"length\", \"mean\", \"sd\")] %>%\n  arrange(-mean)\n\nunemploy_state_stat$mean <- round(unemploy_state_stat$mean, 2) # round to 2 decimal places\nunemploy_state_stat$sd <- round(unemploy_state_stat$sd, 2)\n\nunemploy_state_stat <- ggtexttable(unemploy_state_stat,\n  rows = NULL,\n  theme = ttheme(\"mOrange\")\n)\n\ntext_2 <- paste(\"Perceived risk of unemployment\", sep = \" \") # Create text to annotate summary tables\ntext_1 <- paste(\"Perceived risk of financial hardship\", sep = \" \")\ntext.p1 <- ggparagraph(text = text_1, face = \"italic\", size = 11, color = \"black\")\ntext.p2 <- ggparagraph(text = text_2, face = \"italic\", size = 11, color = \"black\")\n\nggarrange(text.p1, text.p2, finance_state_stat, unemploy_state_stat, # combine the plots\n  heights = c(0.1, 2),\n  ncol = 2, nrow = 2\n)\n\n\n\n\nEducation\nRespondents with a higher education degree report a higher perceived risk of infection, but lower perceived risk of death.\nRespondents with a lower educaton degree report a higher perceived unemployment risk and financial risk.\n\n\ndemo <- demo %>% # recode education level into more organzied groups\n  mutate(tidyEdu = recode(education,\n    `1 Less than 1st grade` = \"Less than HS\",\n    `10 Some college-no degree` = \"Some College\",\n    `11 Assoc. college degree-occ/voc prog` = \"Associate\",\n    `12 Assoc. college degree-academic prog` = \"Associate\",\n    `13 Bachelor's degree` = \"College/professional\",\n    `14 Master's degree` = \"Master/PhD\",\n    `15 Professional school degree` = \"College/professional\",\n    `16 Doctorate degree` = \"Master/PhD\",\n    `2 Up to 4th grade` = \"Less than HS\",\n    `3 5th or 6th grade` = \"Less than HS\",\n    `4 7th or 8th grade` = \"Less than HS\",\n    `5 9th grade` = \"Less than HS\",\n    `6 10th grade` = \"Less than HS\",\n    `7 11th grade` = \"Less than HS\",\n    `8 12th grade-no diploma` = \"Less than HS\",\n    `9 High school graduate or GED` = \"HS\"\n  ))\n\n\nedu <- demo %>%\n  group_by(tidyEdu) %>%\n  dplyr::summarise(e = n())\n\nggplot(edu, aes(x = tidyEdu, y = e, fill = tidyEdu)) + # Barplot of education distribution with annotation\n  geom_col() +\n  geom_label(aes(label = e), fill = \"white\") +\n  labs(x = \"Education\", y = \"Count\") +\n  scale_fill_jco() +\n  coord_flip() +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(limits = c(\"Less than HS\", \"HS\", \"Some College\", \"Associate\", \"College/professional\", \"Master/PhD\")) # fixed order\n\n\n\n# summarize basic statistic using Rmisc package\nvis_death <- summarySE(demo, measurevar = \"cr006\", groupvars = c(\"tidyEdu\"))\n\nedu_2 <- ggplot(vis_death, aes(x = tidyEdu, y = cr006, fill = tidyEdu)) + # Plot Perceived risk of death\n  geom_bar(stat = \"identity\", width = .5) +\n  scale_fill_jco() +\n  theme_minimal() +\n  coord_flip() +\n  labs(x = \"\", y = \"Perceived risk of death (%)\") +\n  scale_x_discrete(limits = c(\"Less than HS\", \"HS\", \"Some College\", \"Associate\", \"College/professional\", \"Master/PhD\")) +\n  scale_y_continuous(breaks = seq(0, 30, by = 5))\n\n\nvis_inf <- summarySE(demo, measurevar = \"cr005\", groupvars = c(\"tidyEdu\")) # Plot Perceived risk of infection\n\nedu_1 <- ggplot(vis_inf, aes(x = tidyEdu, y = cr005, fill = tidyEdu)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  scale_fill_jco() +\n  coord_flip() +\n  labs(x = \"\", y = \"Perceived risk of infection (%)\") +\n  scale_x_discrete(limits = c(\"Less than HS\", \"HS\", \"Some College\", \"Associate\", \"College/professional\", \"Master/PhD\")) +\n  scale_y_continuous(breaks = seq(0, 30, by = 5))\n\n# Perceived unemployment risk (cr008a) by education\nvis_umemploy <- summarySE(demo, measurevar = \"cr008a\", groupvars = c(\"tidyEdu\"))\n\nedu_4 <- ggplot(vis_umemploy, aes(x = tidyEdu, y = cr008a, fill = tidyEdu)) + # Plot Perceived risk of unemployment\n  geom_bar(stat = \"identity\", width = .5) +\n  coord_flip() +\n  scale_fill_jco() +\n  theme_minimal() +\n  labs(x = \"\", y = \"Perceived risk of unemployment (%)\") +\n  scale_x_discrete(limits = c(\"Less than HS\", \"HS\", \"Some College\", \"Associate\", \"College/professional\", \"Master/PhD\")) +\n  scale_y_continuous(breaks = seq(0, 30, by = 5))\n\n# Perceived financial risk (cr009) by education\nvis_financial <- summarySE(demo, measurevar = \"cr009\", groupvars = c(\"tidyEdu\"))\n\nedu_3 <- ggplot(vis_financial, aes(x = tidyEdu, y = cr009, fill = tidyEdu)) + # Plot Perceived risk of running out of money\n  geom_bar(stat = \"identity\", width = .5) +\n  coord_flip() +\n  scale_fill_jco() +\n  theme_minimal() +\n  labs(x = \"\", y = \"Perceived risk of running out of money (%)\") +\n  scale_x_discrete(limits = c(\"Less than HS\", \"HS\", \"Some College\", \"Associate\", \"College/professional\", \"Master/PhD\")) +\n  scale_y_continuous(breaks = seq(0, 30, by = 5))\n\nggarrange(edu_1, edu_2, edu_3, edu_4, # Combine plots\n  common.legend = TRUE, legend = \"none\",\n  ncol = 2, nrow = 2\n)\n\n\n\n\nIncome\nHigh income respondents report a higher perceived risk of infection, but a lower perceived risk of death.\nLow income respondents report a higher perceived unemployment risk and financial risk.\n\n\ndemo <- demo %>%\n  mutate(incomeTidy = recode(hhincome,\n    `1 Less than $5,000` = \"under 20k\",\n    `3 7,500 to 9,999` = \"under 20k\",\n    `2 5,000 to 7,499` = \"under 20k\",\n    `4 10,000 to 12,499` = \"under 20k\",\n    `5 12,500 to 14,999` = \"under 20k\",\n    `6 15,000 to 19,999` = \"under 20k\",\n    `7 20,000 to 24,999` = \"20-39k\",\n    `8 25,000 to 29,999` = \"20-39k\",\n    `9 30,000 to 34,999` = \"20-39k\",\n    `10 35,000 to 39,999` = \"20-39k\",\n    `11 40,000 to 49,999` = \"40-59k\",\n    `12 50,000 to 59,999` = \"40-59k\",\n    `13 60,000 to 74,999` = \"60-74k\",\n    `14 75,000 to 99,999` = \"75-99k\",\n    `15 100,000 to 149,999` = \"100-149k\",\n    `16 150,000 or more` = \"150k plus\"\n  ))\n\ntemp_inc <- demo %>%\n  select(incomeTidy) %>%\n  group_by(incomeTidy) %>%\n  dplyr::summarise(cnt = n())\n\nggplot(temp_inc, aes(x = incomeTidy, y = cnt, fill = incomeTidy)) +\n  geom_col() +\n  geom_label(aes(label = cnt), fill = \"white\") +\n  labs(x = \"Income\", y = \"Count\") +\n  scale_fill_jco() +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(limits = c(\"under 20k\", \"20-39k\", \"40-59k\", \"60-74k\", \"75-99k\", \"100-149k\", \"150k plus\"))\n\n\n\n# Perceived risk of infection (cr005) by Income\ninc_infection <- summarySE(demo, measurevar = \"cr005\", groupvars = c(\"incomeTidy\"))\n\ninc_1 <- ggplot(inc_infection, aes(x = incomeTidy, y = cr005, fill = incomeTidy)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  scale_fill_jco() +\n  coord_flip() +\n  labs(x = \"\", y = \"Perceived risk of infection (%)\") +\n  scale_x_discrete(limits = c(\"under 20k\", \"20-39k\", \"40-59k\", \"60-74k\", \"75-99k\", \"100-149k\", \"150k plus\"))\n\n# Perceived risk of death (cr006) by Education\ninc_death <- summarySE(demo, measurevar = \"cr006\", groupvars = c(\"incomeTidy\"))\n\ninc_2 <- ggplot(inc_death, aes(x = incomeTidy, y = cr006, fill = incomeTidy)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  coord_flip() +\n  scale_fill_jco() +\n  labs(x = \"\", y = \"Perceived risk of death (%)\") +\n  scale_x_discrete(limits = c(\"under 20k\", \"20-39k\", \"40-59k\", \"60-74k\", \"75-99k\", \"100-149k\", \"150k plus\"))\n\n# Perceived unemployment risk (cr008a) by Income\ninc_unemploy <- summarySE(demo, measurevar = \"cr008a\", groupvars = c(\"incomeTidy\"))\n\ninc_4 <- ggplot(inc_unemploy, aes(x = incomeTidy, y = cr008a, fill = incomeTidy)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  coord_flip() +\n  scale_fill_jco() +\n  labs(x = \"\", y = \"Perceived risk of unemployment (%)\") +\n  scale_x_discrete(limits = c(\"under 20k\", \"20-39k\", \"40-59k\", \"60-74k\", \"75-99k\", \"100-149k\", \"150k plus\"))\n\n# Perceived financial risk (cr009) by Income\ninc_unemploy <- summarySE(demo, measurevar = \"cr009\", groupvars = c(\"incomeTidy\"))\n\n# Create visualization, order the bar by education level\ninc_3 <- ggplot(inc_unemploy, aes(x = incomeTidy, y = cr009, fill = incomeTidy)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  coord_flip() +\n  scale_fill_jco() +\n  labs(x = \"\", y = \"Perceived risk of running out of money (%)\") +\n  scale_x_discrete(limits = c(\"under 20k\", \"20-39k\", \"40-59k\", \"60-74k\", \"75-99k\", \"100-149k\", \"150k plus\"))\n\nggarrange(inc_1, inc_2, inc_3, inc_4,\n  common.legend = TRUE, legend = \"none\",\n  ncol = 2, nrow = 2\n)\n\n\n\n\nRace\nCompare to other races, Black American reported a lower perceived risk of infection, but a higher perceived financial risk, and perceived risk of death.\n\n\nrace_total <- demo %>%\n  select(race) %>%\n  group_by(race) %>%\n  filter(race %in% c(\"1 White Only\", \"2 Black Only\", \"4 Asian Only\", \"6 Mixed\")) %>%\n  dplyr::summarise(r = n())\n\n# Plot race distribution with annotation\nggplot(race_total, aes(x = race, y = r, fill = race)) +\n  geom_col() +\n  geom_label(aes(label = r), fill = \"white\") +\n  labs(x = \"Race\", y = \"Count\") +\n  scale_fill_jco() +\n  coord_flip() +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n# filter out the racial groups n >200\ndemo_race <- demo %>%\n  select(race, cr005, cr006, cr008a, cr009) %>%\n  filter(race %in% c(\"1 White Only\", \"2 Black Only\", \"4 Asian Only\", \"6 Mixed\"))\n\n# Perceived risk of infection (cr005) by Race\nrace_infection <- summarySE(demo_race, measurevar = \"cr005\", groupvars = c(\"race\"))\n\nrace_1 <- ggplot(race_infection, aes(x = race, y = cr005, fill = race)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  coord_flip() +\n  scale_fill_jco() +\n  labs(x = \"\", y = \"Perceived risk of infection (%)\")\n\n# Perceived risk of death (cr006) by Race\nrace_death <- summarySE(demo_race, measurevar = \"cr006\", groupvars = c(\"race\"))\n\nrace_2 <- ggplot(race_death, aes(x = race, y = cr006, fill = race)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  coord_flip() +\n  scale_fill_jco() +\n  labs(x = \"\", y = \"Perceived risk of death (%)\")\n\n# Perceived unemployment risk (cr008a) by Race\nrace_unemploy <- summarySE(demo_race, measurevar = \"cr008a\", groupvars = c(\"race\"))\n\nrace_4 <- ggplot(race_unemploy, aes(x = race, y = cr008a, fill = race)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  coord_flip() +\n  scale_fill_jco() +\n  labs(x = \"\", y = \"Perceived risk of unemployment (%)\")\n\n# Perceived financial risk (cr009) by Race\nrace_finance <- summarySE(demo_race, measurevar = \"cr009\", groupvars = c(\"race\"))\n\nrace_3 <- ggplot(race_finance, aes(x = race, y = cr009, fill = race)) +\n  geom_bar(stat = \"identity\", width = .5) +\n  theme_minimal() +\n  coord_flip() +\n  scale_fill_jco() +\n  labs(x = \"\", y = \"Perceived risk of running out of money (%)\")\n\nggarrange(race_1, race_2, race_3, race_4,\n  common.legend = TRUE, legend = \"none\",\n  ncol = 2, nrow = 2\n)\n\n\n\n\nTime\nPerceived financial risk and unemployment risk appear to peak at the late March, within the timeframe of this survey.\nAn increasing perceived risk of infection and death related to Coronavirus were noted during March, 2020.\n\n\ndemo$end_date <- as.Date(demo$end_date, format = \"%d%b%Y\") # convert date to the right format\n\ntime_stat <- demo %>% # Calculate daily average value for each risk items to create line chart\n  select(cr005, cr006, cr009, cr008a, end_date) %>%\n  group_by(end_date) %>%\n  dplyr::summarise(n = n(), infection = mean(cr005), death = mean(cr006), unemployment = mean(cr008a), financial = mean(cr009))\n\nt1 <- ggplot(data = time_stat) + # Line chart 1\n  geom_line(aes(end_date, infection, color = \"Perceived risk of infection\")) +\n  geom_line(aes(end_date, death, color = \"Perceived risk of death\")) +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) + # hide legend text, and adjust legend font size\n  labs(y = \"Perceived Risk (%)\", x = \"Survey Date\")\n\n\nt2 <- ggplot(data = time_stat) +\n  geom_line(aes(end_date, financial, color = \"Perceived financial risk\")) + # Line chart2\n  geom_line(aes(end_date, unemployment, color = \"Perceived unemployment risk\")) +\n  theme_bw() +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  labs(y = \"Perceived Risk (%)\", x = \"Survey Date\")\n\n\nt3 <- ggplot(demo) +\n  geom_smooth(aes(end_date, cr005, color = \"Perceived financial risk\")) + # geom_smooth plot 1\n  geom_smooth(aes(end_date, cr006, color = \"Perceived risk of death\")) +\n  theme_bw() +\n  labs(y = \"\", x = \"Survey Date\")\n\nt4 <- ggplot(demo) +\n  geom_smooth(aes(end_date, cr008a, color = \"Perceived unemployment risk\")) + # geom_smooth plot 1\n  geom_smooth(aes(end_date, cr009, color = \"Perceived financial risk\")) +\n  theme(legend.title = element_blank(), legend.text = element_text(size = 10)) +\n  theme_bw() +\n  labs(y = \"\", x = \"Survey Date\")\n\n\nt5 <- ggplot(demo, aes(end_date, cr005)) +\n  geom_jitter(size = 1) +\n  theme_bw() +\n  geom_smooth() +\n  labs(x = \"\")\n\nt6 <- ggplot(demo, aes(end_date, cr006)) +\n  geom_jitter(size = 1) +\n  theme_bw() +\n  geom_smooth() +\n  labs(x = \"\")\n\nt7 <- ggplot(demo, aes(end_date, cr008a)) +\n  geom_jitter(size = 1) +\n  theme_bw() +\n  geom_smooth()\n\nt8 <- ggplot(demo, aes(end_date, cr009)) +\n  geom_jitter(size = 1) +\n  theme_bw() +\n  geom_smooth()\n\n\nggarrange(t1, t3,\n  ncol = 2, nrow = 1,\n  common.legend = TRUE, legend = \"top\"\n)\n\n\n\nggarrange(t2, t4,\n  ncol = 2, nrow = 1,\n  common.legend = TRUE, legend = \"top\"\n)\n\n\n\n# ggarrange(t5, t6,t7, t8,\n#           ncol = 2, nrow = 2,\n#           common.legend = TRUE, legend = \"top\")\n\n\n\n[The graph below is added by ML]\n\n\n# Edit by ML: Showing the variability in responses across time\nggplot(\n  demo,\n  aes(end_date, cr008a)\n) +\n  geom_jitter(width = 0.1, height = 0.5, alpha = 0.1, size = 0.5) +\n  stat_summary(fun = mean, geom = \"line\") +\n  theme_bw() +\n  geom_smooth(linetype = \"dotted\") +\n  labs(y = \"Perceived Financial Risk (%)\")\n\n\n\n\nSummary\nThe survey was conducted in the early month of the COVID-19 outbreak in the US. There was a large variation in how people evaluate risks related to Coronavirus, but the findings suggested that people perception of risks experienced a significant increase compare to the beginning of the survey.\nPublication Statement\nThe analysis described in this page relies on data from survey(s) administered by the Understanding America Study, which is maintained by the Center for Economic and Social Research (CESR) at the University of Southern California. The content of this page is solely the responsibility of the authors and does not necessarily represent the official views of USC or UAS. Journalists and other reporters must refer readers to methodology information available at <uasdata.usc.edu> or election.uas.edu as appropriate.\n\n\n\n",
    "preview": "posts/2020-07-25-part-1-covid-19/covid_p1_files/figure-html5/gender-1.png",
    "last_modified": "2021-02-27T14:33:08-08:00",
    "input_file": {}
  }
]
